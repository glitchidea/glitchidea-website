# This workflow will build and deploy the portfolio site to GitHub Pages
# For more information see: https://docs.github.com/en/actions/deployment/deploying-to-github-pages

name: Deploy Portfolio to GitHub Pages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build static site
        run: |
          # Create public directory structure
          mkdir -p dist
          cp -r public/* dist/
          
          # Create index.html from EJS template
          node -e "
          const ejs = require('ejs');
          const fs = require('fs');
          const path = require('path');
          
          // Load data
          const socialData = JSON.parse(fs.readFileSync('./dist/api/social.json', 'utf8'));
          const projectsData = JSON.parse(fs.readFileSync('./dist/api/projects.json', 'utf8'));
          const servicesData = JSON.parse(fs.readFileSync('./dist/api/services.json', 'utf8'));
          const blogData = JSON.parse(fs.readFileSync('./dist/api/blog.json', 'utf8'));
          const workData = JSON.parse(fs.readFileSync('./dist/api/work.json', 'utf8'));
          
          // Render main template
          const template = fs.readFileSync('./views/index.ejs', 'utf8');
          const html = ejs.render(template, {
            title: 'GlitchIdea - Siber Güvenlik Uzmanı',
            description: 'Siber Güvenlik Uzmanı & Güvenlik Danışmanı. Python Güvenlik Geliştiricisi, Django & Flask Uzmanı, Penetrasyon Test Uzmanı.',
            keywords: 'siber güvenlik, penetrasyon test, güvenlik danışmanı, web geliştirme, django, flask, python güvenlik',
            socialData,
            projectsData,
            servicesData,
            blogData,
            workData
          });
          
          fs.writeFileSync('./dist/index.html', html);
          "
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist directory to Pages
          path: 'dist'
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
